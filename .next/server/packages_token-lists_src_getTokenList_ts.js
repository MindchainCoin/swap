"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "packages_token-lists_src_getTokenList_ts";
exports.ids = ["packages_token-lists_src_getTokenList_ts"];
exports.modules = {

/***/ "./packages/token-lists/src/getTokenList.ts":
/*!**************************************************!*\
  !*** ./packages/token-lists/src/getTokenList.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getTokenList)\n/* harmony export */ });\n/* harmony import */ var _uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/token-lists/src/tokenlist.schema.json */ \"./node_modules/@uniswap/token-lists/src/tokenlist.schema.json\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ajv */ \"ajv\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pancakeswap_utils_uriToHttp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pancakeswap/utils/uriToHttp */ \"./packages/utils/uriToHttp.ts\");\n/* eslint-disable no-continue */ /* eslint-disable no-await-in-loop */ \n\n\nconst tokenListValidator = new (ajv__WEBPACK_IMPORTED_MODULE_1___default())({\n    allErrors: true\n}).compile(_uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n */ async function getTokenList(listUrl) {\n    const urls = (0,_pancakeswap_utils_uriToHttp__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(listUrl);\n    for(let i = 0; i < urls.length; i++){\n        const url = urls[i];\n        const isLast = i === urls.length - 1;\n        let response;\n        try {\n            response = await fetch(url);\n        } catch (error) {\n            console.error(\"Failed to fetch list\", listUrl, error);\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`);\n            continue;\n        }\n        if (!response.ok) {\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`);\n            continue;\n        }\n        const json = await response.json();\n        if (!tokenListValidator(json)) {\n            const validationErrors = tokenListValidator.errors?.reduce((memo, error)=>{\n                const add = `${error.dataPath} ${error.message ?? \"\"}`;\n                return memo.length > 0 ? `${memo}; ${add}` : `${add}`;\n            }, \"\") ?? \"unknown error\";\n            throw new Error(`Token list failed validation: ${validationErrors}`);\n        }\n        return json;\n    }\n    throw new Error(\"Unrecognized list URL protocol.\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy90b2tlbi1saXN0cy9zcmMvZ2V0VG9rZW5MaXN0LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsOEJBQThCLEdBQzlCLG1DQUFtQyxHQUVnQztBQUM5QztBQUMrQjtBQUVwRCxNQUFNRyxrQkFBa0IsR0FBRyxJQUFJRiw0Q0FBRyxDQUFDO0lBQUVHLFNBQVMsRUFBRSxJQUFJO0NBQUUsQ0FBQyxDQUFDQyxPQUFPLENBQUNMLDJFQUFNLENBQUM7QUFFdkU7SUFLRSxNQUFNUSxJQUFJLEdBQWFOLFNBQVMsQ0FBQ0ssT0FBTyxDQUFDO0lBRXpDLElBQUssSUFBSUUsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRCxJQUFJO0lBQ2IsQ0FBR0EsSUFBSSxDQUFDQyxDQUFDLENBQUM7UUFDbkIsTUFBTUcsR0FBQUEsd0VBQVUsR0FBS0osSUFBSSxDQUFDRTtRQUMxQixJQUFJRyxRQUFRO1FBQ1osSUFBSTtZQUNGQSxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDSCxHQUFHLENBQUM7UUFDN0IsRUFBRSxPQUFPSTtZQUNQQztZQUNBLElBQUlKLE1BQU0sRUFBRSxNQUFNLElBQUlLLEtBQUssQ0FBQztZQUM1QixTQUFRO1FBQ1YsQ0FBQztRQUVELElBQUksQ0FBQ0osUUFBUSxDQUFDSyxFQUFFLEVBQUU7WUFDaEIsSUFBSU47O1FBRU4sQ0FBQztRQUVELE1BQU1PLElBQUksR0FBRyxNQUFNTixRQUFRLENBQUNNLElBQUksRUFBRTtRQUNsQyxJQUFJLENBQUNoQjs7Z0JBR0MsTUFBTXFCLEdBQUcsR0FBRyxDQUFDLEVBQUUsS0FBTSxDQUFTQztnQkFDOUIsT0FBT0YsSUFBSSxDQUFDYixNQUFNLEdBQUcsQ0FBQztZQUN4QixDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksZUFBZTtZQUMzQixNQUFNLElBQUlPLEtBQUssQ0FBQyxDQUFDLDhCQUE4QixFQUFFRztRQUNuRCxDQUFDO1FBQ0QsT0FBT0QsSUFBSSxDQUFhO0lBQzFCLENBQUM7SUFDRDtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYW5jYWtlLWZyb250ZW5kLy4vcGFja2FnZXMvdG9rZW4tbGlzdHMvc3JjL2dldFRva2VuTGlzdC50cz9iMzMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnRpbnVlICovXHJcbi8qIGVzbGludC1kaXNhYmxlIG5vLWF3YWl0LWluLWxvb3AgKi9cclxuaW1wb3J0IHsgVG9rZW5MaXN0IH0gZnJvbSAnQHVuaXN3YXAvdG9rZW4tbGlzdHMnXHJcbmltcG9ydCBzY2hlbWEgZnJvbSAnQHVuaXN3YXAvdG9rZW4tbGlzdHMvc3JjL3Rva2VubGlzdC5zY2hlbWEuanNvbidcclxuaW1wb3J0IEFqdiBmcm9tICdhanYnXHJcbmltcG9ydCB1cmlUb0h0dHAgZnJvbSAnQHBhbmNha2Vzd2FwL3V0aWxzL3VyaVRvSHR0cCdcclxuXHJcbmNvbnN0IHRva2VuTGlzdFZhbGlkYXRvciA9IG5ldyBBanYoeyBhbGxFcnJvcnM6IHRydWUgfSkuY29tcGlsZShzY2hlbWEpXHJcblxyXG4vKipcclxuICogQ29udGFpbnMgdGhlIGxvZ2ljIGZvciByZXNvbHZpbmcgYSBsaXN0IFVSTCB0byBhIHZhbGlkYXRlZCB0b2tlbiBsaXN0XHJcbiAqIEBwYXJhbSBsaXN0VXJsIGxpc3QgdXJsXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBnZXRUb2tlbkxpc3QobGlzdFVybDogc3RyaW5nKTogUHJvbWlzZTxUb2tlbkxpc3Q+IHtcclxuICBjb25zdCB1cmxzOiBzdHJpbmdbXSA9IHVyaVRvSHR0cChsaXN0VXJsKVxyXG5cclxuICBmb3IgKGxldCBpID0gMDsgaSA8IHVybHMubGVuZ3RoOyBpKyspIHtcclxuICAgIGNvbnN0IHVybCA9IHVybHNbaV1cclxuICAgIGNvbnN0IGlzTGFzdCA9IGkgPT09IHVybHMubGVuZ3RoIC0gMVxyXG4gICAgbGV0IHJlc3BvbnNlXHJcbiAgICB0cnkge1xyXG4gICAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybClcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBsaXN0JywgbGlzdFVybCwgZXJyb3IpXHJcbiAgICAgIGlmIChpc0xhc3QpIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGRvd25sb2FkIGxpc3QgJHtsaXN0VXJsfWApXHJcbiAgICAgIGNvbnRpbnVlXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBpZiAoaXNMYXN0KSB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBkb3dubG9hZCBsaXN0ICR7bGlzdFVybH1gKVxyXG4gICAgICBjb250aW51ZVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgIGlmICghdG9rZW5MaXN0VmFsaWRhdG9yKGpzb24pKSB7XHJcbiAgICAgIGNvbnN0IHZhbGlkYXRpb25FcnJvcnM6IHN0cmluZyA9XHJcbiAgICAgICAgdG9rZW5MaXN0VmFsaWRhdG9yLmVycm9ycz8ucmVkdWNlPHN0cmluZz4oKG1lbW8sIGVycm9yKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBhZGQgPSBgJHsoZXJyb3IgYXMgYW55KS5kYXRhUGF0aH0gJHtlcnJvci5tZXNzYWdlID8/ICcnfWBcclxuICAgICAgICAgIHJldHVybiBtZW1vLmxlbmd0aCA+IDAgPyBgJHttZW1vfTsgJHthZGR9YCA6IGAke2FkZH1gXHJcbiAgICAgICAgfSwgJycpID8/ICd1bmtub3duIGVycm9yJ1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRva2VuIGxpc3QgZmFpbGVkIHZhbGlkYXRpb246ICR7dmFsaWRhdGlvbkVycm9yc31gKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGpzb24gYXMgVG9rZW5MaXN0XHJcbiAgfVxyXG4gIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGxpc3QgVVJMIHByb3RvY29sLicpXHJcbn1cclxuIl0sIm5hbWVzIjpbInNjaGVtYSIsIkFqdiIsInVyaVRvSHR0cCIsInRva2VuTGlzdFZhbGlkYXRvciIsImFsbEVycm9ycyIsImNvbXBpbGUiLCJnZXRUb2tlbkxpc3QiLCJsaXN0VXJsIiwidXJscyIsImkiLCJsZW5ndGgiLCJ1cmwiLCJpc0xhc3QiLCJyZXNwb25zZSIsImZldGNoIiwiZXJyb3IiLCJjb25zb2xlIiwiRXJyb3IiLCJvayIsImpzb24iLCJ2YWxpZGF0aW9uRXJyb3JzIiwiZXJyb3JzIiwicmVkdWNlIiwibWVtbyIsImFkZCIsImRhdGFQYXRoIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/token-lists/src/getTokenList.ts\n");

/***/ }),

/***/ "./packages/utils/uriToHttp.ts":
/*!*************************************!*\
  !*** ./packages/utils/uriToHttp.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ uriToHttp)\n/* harmony export */ });\n/* eslint-disable no-case-declarations */ /**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */ function uriToHttp(uri) {\n    const protocol = uri.split(\":\")[0].toLowerCase();\n    switch(protocol){\n        case \"https\":\n            return [\n                uri\n            ];\n        case \"http\":\n            return [\n                `https${uri.substring(4)}`,\n                uri\n            ];\n        case \"ipfs\":\n            const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2];\n            return [\n                `https://cloudflare-ipfs.com/ipfs/${hash}/`,\n                `https://ipfs.io/ipfs/${hash}/`\n            ];\n        case \"ipns\":\n            const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2];\n            return [\n                `https://cloudflare-ipfs.com/ipns/${name}/`,\n                `https://ipfs.io/ipns/${name}/`\n            ];\n        default:\n            return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy91dGlscy91cmlUb0h0dHAudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHVDQUF1QyxHQUN2QztJQUtFLE1BQU1FLFFBQVEsR0FBR0QsR0FBRyxDQUFDRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUNDLFdBQVcsRUFBRTtJQUNoRCxPQUFRRixRQUFRO0lBQ1QsQ0FBTztZQUNWLE9BQU87Z0JBQUNELEdBQUc7YUFBQztRQUNkLEtBQUssTUFBTTtZQUNULE9BQU87O2dCQUE2QkEsR0FBRzthQUFDO1FBQzFDLEtBQUssTUFBTTtZQUNULE1BQU1LO1lBQ047Z0JBQVEsQ0FBQztnQkFBNEMsQ0FBQyxxQkFBcUIsRUFBRUEsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUFDO1FBQ3ZGLEtBQUssTUFBTTtZQUNULE1BQU1FLElBQUksR0FBR1AsR0FBRyxDQUFDTSxLQUFLO1lBQ3RCO2dCQUFRLENBQUM7Z0JBQTRDLENBQUMscUJBQXFCLEVBQUVDLElBQUksQ0FBQyxDQUFDLENBQUM7YUFBQztRQUN2RjtZQUNFLE9BQU8sRUFBRTtLQUNaO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BhbmNha2UtZnJvbnRlbmQvLi9wYWNrYWdlcy91dGlscy91cmlUb0h0dHAudHM/MjJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1jYXNlLWRlY2xhcmF0aW9ucyAqL1xyXG4vKipcclxuICogR2l2ZW4gYSBVUkkgdGhhdCBtYXkgYmUgaXBmcywgaXBucywgaHR0cCwgb3IgaHR0cHMgcHJvdG9jb2wsIHJldHVybiB0aGUgZmV0Y2gtYWJsZSBodHRwKHMpIFVSTHMgZm9yIHRoZSBzYW1lIGNvbnRlbnRcclxuICogQHBhcmFtIHVyaSB0byBjb252ZXJ0IHRvIGZldGNoLWFibGUgaHR0cCB1cmxcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVyaVRvSHR0cCh1cmk6IHN0cmluZyk6IHN0cmluZ1tdIHtcclxuICBjb25zdCBwcm90b2NvbCA9IHVyaS5zcGxpdCgnOicpWzBdLnRvTG93ZXJDYXNlKClcclxuICBzd2l0Y2ggKHByb3RvY29sKSB7XHJcbiAgICBjYXNlICdodHRwcyc6XHJcbiAgICAgIHJldHVybiBbdXJpXVxyXG4gICAgY2FzZSAnaHR0cCc6XHJcbiAgICAgIHJldHVybiBbYGh0dHBzJHt1cmkuc3Vic3RyaW5nKDQpfWAsIHVyaV1cclxuICAgIGNhc2UgJ2lwZnMnOlxyXG4gICAgICBjb25zdCBoYXNoID0gdXJpLm1hdGNoKC9eaXBmczooXFwvXFwvKT8oLiopJC9pKT8uWzJdXHJcbiAgICAgIHJldHVybiBbYGh0dHBzOi8vY2xvdWRmbGFyZS1pcGZzLmNvbS9pcGZzLyR7aGFzaH0vYCwgYGh0dHBzOi8vaXBmcy5pby9pcGZzLyR7aGFzaH0vYF1cclxuICAgIGNhc2UgJ2lwbnMnOlxyXG4gICAgICBjb25zdCBuYW1lID0gdXJpLm1hdGNoKC9eaXBuczooXFwvXFwvKT8oLiopJC9pKT8uWzJdXHJcbiAgICAgIHJldHVybiBbYGh0dHBzOi8vY2xvdWRmbGFyZS1pcGZzLmNvbS9pcG5zLyR7bmFtZX0vYCwgYGh0dHBzOi8vaXBmcy5pby9pcG5zLyR7bmFtZX0vYF1cclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldHVybiBbXVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsidXJpVG9IdHRwIiwidXJpIiwicHJvdG9jb2wiLCJzcGxpdCIsInRvTG93ZXJDYXNlIiwic3Vic3RyaW5nIiwiaGFzaCIsIm1hdGNoIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/utils/uriToHttp.ts\n");

/***/ }),

/***/ "./node_modules/@uniswap/token-lists/src/tokenlist.schema.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@uniswap/token-lists/src/tokenlist.schema.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://uniswap.org/tokenlist.schema.json","title":"Uniswap Token List","description":"Schema for lists of tokens compatible with the Uniswap Interface","definitions":{"Version":{"type":"object","description":"The version of the list, used in change detection","examples":[{"major":1,"minor":0,"patch":0}],"additionalProperties":false,"properties":{"major":{"type":"integer","description":"The major version of the list. Must be incremented when tokens are removed from the list or token addresses are changed.","minimum":0,"examples":[1,2]},"minor":{"type":"integer","description":"The minor version of the list. Must be incremented when tokens are added to the list.","minimum":0,"examples":[0,1]},"patch":{"type":"integer","description":"The patch version of the list. Must be incremented for any changes to the list.","minimum":0,"examples":[0,1]}},"required":["major","minor","patch"]},"TagIdentifier":{"type":"string","description":"The unique identifier of a tag","minLength":1,"maxLength":10,"pattern":"^[\\\\w]+$","examples":["compound","stablecoin"]},"ExtensionIdentifier":{"type":"string","description":"The name of a token extension property","minLength":1,"maxLength":40,"pattern":"^[\\\\w]+$","examples":["color","is_fee_on_transfer","aliases"]},"ExtensionMap":{"type":"object","description":"An object containing any arbitrary or vendor-specific token metadata","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValue"},"examples":[{"color":"#000000","is_verified_by_me":true},{"x-bridged-addresses-by-chain":{"1":{"bridgeAddress":"0x4200000000000000000000000000000000000010","tokenAddress":"0x4200000000000000000000000000000000000010"}}}]},"ExtensionPrimitiveValue":{"anyOf":[{"type":"string","minLength":1,"maxLength":42,"examples":["#00000"]},{"type":"boolean","examples":[true]},{"type":"number","examples":[15]},{"type":"null"}]},"ExtensionValue":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"},{"type":"object","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValueInner0"}}]},"ExtensionValueInner0":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"},{"type":"object","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValueInner1"}}]},"ExtensionValueInner1":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"}]},"TagDefinition":{"type":"object","description":"Definition of a tag that can be associated with a token via its identifier","additionalProperties":false,"properties":{"name":{"type":"string","description":"The name of the tag","pattern":"^[ \\\\w]+$","minLength":1,"maxLength":20},"description":{"type":"string","description":"A user-friendly description of the tag","pattern":"^[ \\\\w\\\\.,:]+$","minLength":1,"maxLength":200}},"required":["name","description"],"examples":[{"name":"Stablecoin","description":"A token with value pegged to another asset"}]},"TokenInfo":{"type":"object","description":"Metadata for a single token in a token list","additionalProperties":false,"properties":{"chainId":{"type":"integer","description":"The chain ID of the Ethereum network where this token is deployed","minimum":1,"examples":[1,42]},"address":{"type":"string","description":"The checksummed address of the token on the specified chain ID","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"]},"decimals":{"type":"integer","description":"The number of decimals for the token balance","minimum":0,"maximum":255,"examples":[18]},"name":{"type":"string","description":"The name of the token","minLength":1,"maxLength":40,"pattern":"^[ \\\\w.\'+\\\\-%/À-ÖØ-öø-ÿ:&\\\\[\\\\]\\\\(\\\\)]+$","examples":["USD Coin"]},"symbol":{"type":"string","description":"The symbol for the token; must be alphanumeric","pattern":"^[a-zA-Z0-9+\\\\-%/$.]+$","minLength":1,"maxLength":20,"examples":["USDC"]},"logoURI":{"type":"string","description":"A URI to the token logo asset; if not set, interface will attempt to find a logo based on the token address; suggest SVG or PNG of size 64x64","format":"uri","examples":["ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM"]},"tags":{"type":"array","description":"An array of tag identifiers associated with the token; tags are defined at the list level","items":{"$ref":"#/definitions/TagIdentifier"},"maxItems":10,"examples":["stablecoin","compound"]},"extensions":{"$ref":"#/definitions/ExtensionMap"}},"required":["chainId","address","decimals","name","symbol"]}},"type":"object","additionalProperties":false,"properties":{"name":{"type":"string","description":"The name of the token list","minLength":1,"maxLength":20,"pattern":"^[\\\\w ]+$","examples":["My Token List"]},"timestamp":{"type":"string","format":"date-time","description":"The timestamp of this list version; i.e. when this immutable version of the list was created"},"version":{"$ref":"#/definitions/Version"},"tokens":{"type":"array","description":"The list of tokens included in the list","items":{"$ref":"#/definitions/TokenInfo"},"minItems":1,"maxItems":10000},"keywords":{"type":"array","description":"Keywords associated with the contents of the list; may be used in list discoverability","items":{"type":"string","description":"A keyword to describe the contents of the list","minLength":1,"maxLength":20,"pattern":"^[\\\\w ]+$","examples":["compound","lending","personal tokens"]},"maxItems":20,"uniqueItems":true},"tags":{"type":"object","description":"A mapping of tag identifiers to their name and description","propertyNames":{"$ref":"#/definitions/TagIdentifier"},"additionalProperties":{"$ref":"#/definitions/TagDefinition"},"maxProperties":20,"examples":[{"stablecoin":{"name":"Stablecoin","description":"A token with value pegged to another asset"}}]},"logoURI":{"type":"string","description":"A URI for the logo of the token list; prefer SVG or PNG of size 256x256","format":"uri","examples":["ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM"]}},"required":["name","timestamp","version","tokens"]}');

/***/ })

};
;